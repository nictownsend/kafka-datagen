apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaConnect
metadata:
  annotations:
    eventstreams.ibm.com/use-connector-resources: 'true'
  namespace: es
spec:
  bootstrapServers: 'light-insecure-kafka-bootstrap:9092'
  build:
    output:
      image: 'image-registry.openshift-image-registry.svc:5000/es/kc:0.0.1'
      type: docker
    plugins:
      - artifacts:
          - type: jar
            url: >-
              https://github.com/nictownsend/kafka-datagen/raw/main/kafka-connect-datagen-0.7.0-SNAPSHOT.jar
        name: datagen
  config:
    config.storage.topic: connect-cluster-configs
    group.id: connect-cluster
    offset.storage.topic: connect-cluster-offsets
    status.storage.topic: connect-cluster-status
  replicas: 1
  resources:
    limits:
      cpu: 2000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 2Gi
  template:
    connectContainer:
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
    pod:
      imagePullSecrets: []
      metadata:
        annotations:
          cloudpakId: c8b82d189e7545f0892db9ef2731b90d
          productVersion: 11.2.4
          productID: 2a79e49111f44ec3acd89608e56138f5
          cloudpakName: IBM Cloud Pak for Integration
          productChargedContainers: kc-connect
          productCloudpakRatio: '2:1'
          productName: IBM Event Streams for Non Production
          eventstreams.production.type: CloudPakForIntegrationNonProduction
          productMetric: VIRTUAL_PROCESSOR_CORE
  replicas: 1
  url: 'http://kc-connect-api.es.svc:8083'
